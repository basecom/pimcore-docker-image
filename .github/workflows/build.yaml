name: 'Build and push images'

on:
    push:
        branches:
            - main
    # Rebuild every other day
    schedule:
        - cron: '0 0 */2 * *'

concurrency:
    group: ${{ github.workflow }}-${{ github.ref }}
    cancel-in-progress: true

env:
    REGISTRY: ghcr.io

jobs:
    build-and-push-php:
        name: Build and push PHP
        runs-on: ubuntu-latest
        permissions:
            contents: read
            packages: write
            id-token: write
        strategy:
            matrix:
                php_version:
                    - 8.1
                    - 8.2
                    - 8.3
                php_image:
                    - cli
                    - fpm
        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Install cosign
              uses: sigstore/cosign-installer@v3.5.0

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3

            - name: Log into registry ${{ env.REGISTRY }}
              uses: docker/login-action@v3
              with:
                  registry: ${{ env.REGISTRY }}
                  username: ${{ github.actor }}
                  password: ${{ secrets.GITHUB_TOKEN }}

            - name: Extract Docker metadata
              id: meta
              uses: docker/metadata-action@v5
              with:
                  images: ${{ env.REGISTRY }}/${{ github.repository }}/php
                  tags: ${{ matrix.php_version }}-${{ matrix.php_image }}-pimcore

            - name: Build and push Docker image
              id: build-and-push
              uses: docker/build-push-action@v6
              with:
                  platforms: linux/amd64,linux/arm64
                  context: dist/images/php/${{ steps.meta.outputs.version }}
                  push: true
                  tags: ${{ steps.meta.outputs.tags }}
                  labels: ${{ steps.meta.outputs.labels }}
                  cache-from: type=gha
                  cache-to: type=gha,mode=max

            - name: Sign the published Docker image
              env:
                  TAGS: ${{ steps.meta.outputs.tags }}
                  DIGEST: ${{ steps.build-and-push.outputs.digest }}
              shell: bash
              run: echo "${TAGS}" | xargs -I {} cosign sign --yes {}@${DIGEST}
