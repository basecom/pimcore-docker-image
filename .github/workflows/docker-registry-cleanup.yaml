name: 'Cleanup Docker registry'

on:
    workflow_call:
        inputs:
            image_registry:
                type: string
                description: 'Image registry'
                required: true

env:
    REGISTRY: ghcr.io

jobs:
    cleanup:
        name: Cleanup regisitry
        runs-on: ubuntu-latest
        permissions:
            contents: read
            packages: write
            id-token: write
        steps:
            - name: Download digests
              uses: actions/download-artifact@v4
              with:
                  path: /tmp/build-metadata
                  pattern: build-metadata-*
                  merge-multiple: true

            - name: Log into registry ${{ env.REGISTRY }}
              uses: docker/login-action@v3
              with:
                  registry: ${{ env.REGISTRY }}
                  username: ${{ github.actor }}
                  password: ${{ secrets.GITHUB_TOKEN }}

            - name: Fetch multi-platform package version SHAs
              id: multi-arch-digests
              run: |
                  digests=""
                  imageNames=""
                  for identifier in /tmp/build-metadata/image-tags/*; do
                      imageNameAndTag="$(cat /tmp/build-metadata/image-tags/${identifier})"
                      imageName=$(echo $imageNameAndTag | cut -d: -f1)
                      imageUrl="${{ inputs.image_registry }}/${{ github.repository_owner }}/${imageNameAndTag}"
                      imageDigests=$(docker manifest inspect ${imageUrl} | jq -r '.manifests[] | .digest' | paste -s -d ' ' -)
                      
                      imageNames="$images $imageName"
                      digests="$digests $imageDigests"
                  done

                  echo "multi-arch-digests=$digests" >> $GITHUB_OUTPUT
                  echo "image-names=$imageNames" >> $GITHUB_OUTPUT

            - uses: snok/container-retention-policy@v3.0.0
              with:
                  account: basecom
                  token: ${{ secrets.GITHUB_TOKEN }}
                  image-names: ${{ steps.multi-arch-digests.outputs.image-names }}
                  cut-off: 0s
                  tag-selection: untagged
                  dry-run: true
                  skip-shas: ${{ steps.multi-arch-digests.outputs.multi-arch-digests }}
