name: 'Cleanup Docker registry'

on:
    workflow_call:
        inputs:
            image_registry:
                type: string
                description: 'Image registry'
                required: true
            image_url_path:
                type: string
                description: 'Image registry'
                required: true

env:
    REGISTRY: ghcr.io
    # Hardcode for now to get it in lowercase format.
    REGISTRY_IMAGE: ghcr.io/basecom/pimcore-docker-image/php

jobs:
    cleanup:
        name: Cleanup regisitry
        runs-on: ubuntu-latest
        permissions:
            contents: read
            packages: write
            id-token: write
        steps:
            - name: Download digests
              uses: actions/download-artifact@v4
              with:
                  path: /tmp/build-metadata
                  pattern: build-metadata-*
                  merge-multiple: true

            - name: Log into registry ${{ env.REGISTRY }}
              uses: docker/login-action@v3
              with:
                  registry: ${{ env.REGISTRY }}
                  username: ${{ github.actor }}
                  password: ${{ secrets.GITHUB_TOKEN }}

            - name: Fetch multi-platform package version SHAs
              id: multi-arch-digests
              run: |
                  digests=""
                  imageNames=""
                  for imageName in /tmp/build-metadata/image-tags/*; do
                      for imageTag in /tmp/build-metadata/image-tags/"${imageName}"/*; do
                        imageUrl="${{ inputs.image_registry }}/${{ inputs.image_url_path }}/${imageName}:${imageTag}"
                        imageDigests=$(docker manifest inspect ${imageUrl} | jq -r '.manifests[] | .digest' | paste -s -d ' ' -)
                        imageNames="$images $imageName"
                        digests="$digests $imageDigests"
                      done
                  done
                  echo "multi-arch-digests=$digests" >> $GITHUB_OUTPUT
                  echo "image-names=$imageNames" >> $GITHUB_OUTPUT

            - uses: snok/container-retention-policy@v3.0.0
              with:
                  account: basecom
                  token: ${{ secrets.GITHUB_TOKEN }}
                  image-names: ${{ steps.multi-arch-digests.outputs.image-names }}
                  cut-off: 0s
                  tag-selection: untagged
                  dry-run: true
                  skip-shas: ${{ steps.multi-arch-digests.outputs.multi-arch-digests }}
